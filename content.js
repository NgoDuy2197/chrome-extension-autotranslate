let lastMouseX = 0
let lastMouseY = 0
let tooltipDiv = null

// Emoji mapping cho c√°c ng√¥n ng·ªØ
const languageEmojis = {
  'vi': 'üéã', 'en': 'üåç', 'zh': 'üÄÑ', 'ja': 'üóæ', 'ko': 'üéé',
  'fr': 'ü•ñ', 'de': 'üç∫', 'es': 'üåÆ', 'it': 'üçï', 'pt': 'üèñÔ∏è',
  'ru': 'üêª', 'ar': 'üè∫', 'hi': 'üïâÔ∏è', 'th': 'üêò', 'id': 'üå∫',
  'ms': 'üå¥', 'tl': 'üåã', 'fa': 'üåπ', 'tr': '‚òï', 'nl': 'üå∑',
  'pl': 'ü•ü', 'sv': 'ü¶ä', 'da': 'üßÄ', 'no': '‚ùÑÔ∏è', 'fi': 'ü´ê',
  'hu': 'üå∂Ô∏è', 'cs': 'üç∫', 'sk': 'üèîÔ∏è', 'ro': 'üßÑ', 'bg': 'üåπ',
  'hr': 'üèñÔ∏è', 'sr': 'üå≤', 'sl': 'üèîÔ∏è', 'et': 'üå≤', 'lv': 'üåä',
  'lt': 'üå≤', 'mt': 'üåä', 'ga': '‚òòÔ∏è', 'cy': 'üêâ', 'is': 'üåã',
  'mk': 'üèîÔ∏è', 'sq': 'üèîÔ∏è', 'ka': 'üç∑', 'hy': 'üèîÔ∏è', 'az': 'üî•',
  'kk': 'üêé', 'ky': 'üèîÔ∏è', 'uz': 'üåæ', 'tg': 'üèîÔ∏è', 'mn': 'üêé',
  'my': 'üêò', 'km': 'üèõÔ∏è', 'lo': 'üêò', 'ne': 'üèîÔ∏è', 'si': 'üå∫',
  'ur': 'üåô', 'bn': 'üå∫', 'gu': 'üå∫', 'pa': 'üå∫', 'te': 'üå∫',
  'kn': 'üå∫', 'ml': 'üå∫', 'ta': 'üå∫', 'he': 'üïØÔ∏è', 'yi': 'üìö',
  'am': '‚òï', 'sw': 'ü¶Å', 'zu': 'ü¶Å', 'af': 'ü¶Å', 'xh': 'ü¶Å',
  'st': 'ü¶Å', 'tn': 'ü¶Å', 'ss': 'ü¶Å', 've': 'ü¶Å', 'ts': 'ü¶Å',
  'nr': 'ü¶Å', 'lg': 'ü¶Å', 'rw': 'ü¶Å', 'ak': 'ü¶Å', 'yo': 'ü¶Å',
  'ig': 'ü¶Å', 'ha': 'ü¶Å', 'ff': 'ü¶Å', 'wo': 'ü¶Å', 'sn': 'ü¶Å',
  'ny': 'ü¶Å', 'mg': 'ü¶Å', 'so': 'ü¶Å', 'om': 'ü¶Å', 'ti': 'ü¶Å',
  'aa': 'ü¶Å', 'auto': 'üîç'
};

document.addEventListener("mouseup", (e) => {
    const selection = window.getSelection().toString().trim()

    // N·∫øu b√¥i ƒëen trong tooltip th√¨ b·ªè qua
    if (e.target.closest(".my-translate-tooltip")) return

    // N·∫øu c√≥ b√¥i ƒëen ngo√†i tooltip ‚Üí x·ª≠ l√Ω d·ªãch
    if (selection.length > 0) {
        lastMouseX = e.pageX
        lastMouseY = e.pageY

        chrome.runtime.sendMessage(
            { action: "translateMulti", text: selection },
            (res) => {
                if (res) {
                    showTooltip(res, lastMouseX, lastMouseY)
                }
            }
        )
    } else {
        // N·∫øu kh√¥ng c√≤n b√¥i ƒëen, ·∫©n tooltip
        if (tooltipDiv) {
            tooltipDiv.remove()
            tooltipDiv = null
        }
    }
})

// L·∫Øng nghe c·∫≠p nh·∫≠t ng√¥n ng·ªØ t·ª´ popup
chrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {
    if (msg.action === 'updateLanguages') {
        // C√≥ th·ªÉ c·∫≠p nh·∫≠t UI n·∫øu c·∫ßn
        console.log('Languages updated:', msg.languages);
    }
});

function showTooltip(results, x, y) {
    if (tooltipDiv) tooltipDiv.remove()

    tooltipDiv = document.createElement("div")
    tooltipDiv.className = "my-translate-tooltip"

    const values = Object.values(languageEmojis)
    
    let resultsHTML = [
        `<div style="margin-bottom: 10px; font-weight: 500; color: #666;">${values[Math.floor(Math.random() * values.length)]}</div>`,
    ]
    
    // Hi·ªÉn th·ªã ng√¥n ng·ªØ g·ªëc ƒë∆∞·ª£c ph√°t hi·ªán
    // if (results.detected) {
    //     resultsHTML.push(`<div style="margin-bottom: 10px; font-weight: 500; color: #666;">üîç ${results.detected}</div>`)
    // }
    
    // Hi·ªÉn th·ªã c√°c b·∫£n d·ªãch
    if (results.languages && results.languages.length > 0) {
        results.languages.forEach(lang => {
            if (results[lang]) {
                const emoji = languageEmojis[lang] || 'üåê'
                resultsHTML.push(`<div style="margin-bottom: 10px;">${emoji} ${results[lang]}</div>`)
            }
        })
    }

    tooltipDiv.innerHTML = resultsHTML.join("")

    tooltipDiv.style.cssText = `
    position: absolute;
    top: ${y + 40}px;
    left: ${x + 40}px;
    background: #fefefe;
    border: 1px solid #ccc;
    padding: 12px 16px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    z-index: 99999;
    max-width: 360px;
    font-size: 15px;
    line-height: 1.5;
    color: #222;
    font-family: system-ui, sans-serif;
    transition: opacity 0.2s;
    user-select: text; /* Cho ph√©p copy n·ªôi dung */
  `
    document.body.appendChild(tooltipDiv)
}
