// Emoji mapping cho c√°c ng√¥n ng·ªØ
const languageEmojis = {
  'vi': 'üéã', // Vi·ªát Nam - c√¢y tre
  'en': 'üåç', // English - qu·∫£ ƒë·ªãa c·∫ßu
  'zh': 'üÄÑ', // Chinese - mahjong
  'ja': 'üóæ', // Japanese - b·∫£n ƒë·ªì Nh·∫≠t
  'ko': 'üéé', // Korean - b√∫p b√™ Nh·∫≠t
  'fr': 'ü•ñ', // French - b√°nh m√¨
  'de': 'üç∫', // German - bia
  'es': 'üåÆ', // Spanish - taco
  'it': 'üçï', // Italian - pizza
  'pt': 'üèñÔ∏è', // Portuguese - b√£i bi·ªÉn
  'ru': 'üêª', // Russian - g·∫•u
  'ar': 'üè∫', // Arabic - b√¨nh c·ªï
  'hi': 'üïâÔ∏è', // Hindi - om
  'th': 'üêò', // Thai - voi
  'id': 'üå∫', // Indonesian - hoa
  'ms': 'üå¥', // Malay - c√¢y d·ª´a
  'tl': 'üåã', // Tagalog - n√∫i l·ª≠a
  'fa': 'üåπ', // Persian - hoa h·ªìng
  'tr': '‚òï', // Turkish - tr√†
  'nl': 'üå∑', // Dutch - hoa tulip
  'pl': 'ü•ü', // Polish - pierogi
  'sv': 'ü¶ä', // Swedish - c√°o
  'da': 'üßÄ', // Danish - ph√¥ mai
  'no': '‚ùÑÔ∏è', // Norwegian - tuy·∫øt
  'fi': 'ü´ê', // Finnish - vi·ªát qu·∫•t
  'hu': 'üå∂Ô∏è', // Hungarian - ·ªõt
  'cs': 'üç∫', // Czech - bia
  'sk': 'üèîÔ∏è', // Slovak - n√∫i
  'ro': 'üßÑ', // Romanian - t·ªèi
  'bg': 'üåπ', // Bulgarian - hoa h·ªìng
  'hr': 'üèñÔ∏è', // Croatian - b√£i bi·ªÉn
  'sr': 'üå≤', // Serbian - c√¢y th√¥ng
  'sl': 'üèîÔ∏è', // Slovenian - n√∫i
  'et': 'üå≤', // Estonian - c√¢y th√¥ng
  'lv': 'üåä', // Latvian - bi·ªÉn
  'lt': 'üå≤', // Lithuanian - c√¢y th√¥ng
  'mt': 'üåä', // Maltese - bi·ªÉn
  'ga': '‚òòÔ∏è', // Irish - c·ªè ba l√°
  'cy': 'üêâ', // Welsh - r·ªìng
  'is': 'üåã', // Icelandic - n√∫i l·ª≠a
  'mk': 'üèîÔ∏è', // Macedonian - n√∫i
  'sq': 'üèîÔ∏è', // Albanian - n√∫i
  'ka': 'üç∑', // Georgian - r∆∞·ª£u
  'hy': 'üèîÔ∏è', // Armenian - n√∫i
  'az': 'üî•', // Azerbaijani - l·ª≠a
  'kk': 'üêé', // Kazakh - ng·ª±a
  'ky': 'üèîÔ∏è', // Kyrgyz - n√∫i
  'uz': 'üåæ', // Uzbek - l√∫a m√¨
  'tg': 'üèîÔ∏è', // Tajik - n√∫i
  'mn': 'üêé', // Mongolian - ng·ª±a
  'my': 'üêò', // Burmese - voi
  'km': 'üèõÔ∏è', // Khmer - ƒë·ªÅn
  'lo': 'üêò', // Lao - voi
  'ne': 'üèîÔ∏è', // Nepali - n√∫i
  'si': 'üå∫', // Sinhala - hoa
  'ur': 'üåô', // Urdu - trƒÉng
  'bn': 'üå∫', // Bengali - hoa
  'gu': 'üå∫', // Gujarati - hoa
  'pa': 'üå∫', // Punjabi - hoa
  'te': 'üå∫', // Telugu - hoa
  'kn': 'üå∫', // Kannada - hoa
  'ml': 'üå∫', // Malayalam - hoa
  'ta': 'üå∫', // Tamil - hoa
  'he': 'üïØÔ∏è', // Hebrew - n·∫øn
  'yi': 'üìö', // Yiddish - s√°ch
  'am': '‚òï', // Amharic - c√† ph√™
  'sw': 'ü¶Å', // Swahili - s∆∞ t·ª≠
  'zu': 'ü¶Å', // Zulu - s∆∞ t·ª≠
  'af': 'ü¶Å', // Afrikaans - s∆∞ t·ª≠
  'xh': 'ü¶Å', // Xhosa - s∆∞ t·ª≠
  'st': 'ü¶Å', // Southern Sotho - s∆∞ t·ª≠
  'tn': 'ü¶Å', // Tswana - s∆∞ t·ª≠
  'ss': 'ü¶Å', // Swati - s∆∞ t·ª≠
  've': 'ü¶Å', // Venda - s∆∞ t·ª≠
  'ts': 'ü¶Å', // Tsonga - s∆∞ t·ª≠
  'nr': 'ü¶Å', // Northern Sotho - s∆∞ t·ª≠
  'lg': 'ü¶Å', // Ganda - s∆∞ t·ª≠
  'rw': 'ü¶Å', // Kinyarwanda - s∆∞ t·ª≠
  'ak': 'ü¶Å', // Akan - s∆∞ t·ª≠
  'yo': 'ü¶Å', // Yoruba - s∆∞ t·ª≠
  'ig': 'ü¶Å', // Igbo - s∆∞ t·ª≠
  'ha': 'ü¶Å', // Hausa - s∆∞ t·ª≠
  'ff': 'ü¶Å', // Fulah - s∆∞ t·ª≠
  'wo': 'ü¶Å', // Wolof - s∆∞ t·ª≠
  'sn': 'ü¶Å', // Shona - s∆∞ t·ª≠
  'ny': 'ü¶Å', // Chichewa - s∆∞ t·ª≠
  'mg': 'ü¶Å', // Malagasy - s∆∞ t·ª≠
  'so': 'ü¶Å', // Somali - s∆∞ t·ª≠
  'om': 'ü¶Å', // Oromo - s∆∞ t·ª≠
  'ti': 'ü¶Å', // Tigrinya - s∆∞ t·ª≠
  'aa': 'ü¶Å', // Afar - s∆∞ t·ª≠
  'auto': 'üîç' // Auto detect
};

// T√™n ng√¥n ng·ªØ
const languageNames = {
  'vi': 'Ti·∫øng Vi·ªát',
  'en': 'English',
  'zh': '‰∏≠Êñá',
  'ja': 'Êó•Êú¨Ë™û',
  'ko': 'ÌïúÍµ≠Ïñ¥',
  'fr': 'Fran√ßais',
  'de': 'Deutsch',
  'es': 'Espa√±ol',
  'it': 'Italiano',
  'pt': 'Portugu√™s',
  'ru': '–†—É—Å—Å–∫–∏–π',
  'ar': 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©',
  'hi': '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä',
  'th': '‡πÑ‡∏ó‡∏¢',
  'id': 'Bahasa Indonesia',
  'ms': 'Bahasa Melayu',
  'tl': 'Tagalog',
  'fa': 'ŸÅÿßÿ±ÿ≥€å',
  'tr': 'T√ºrk√ße',
  'nl': 'Nederlands',
  'pl': 'Polski',
  'sv': 'Svenska',
  'da': 'Dansk',
  'no': 'Norsk',
  'fi': 'Suomi',
  'hu': 'Magyar',
  'cs': 'ƒåe≈°tina',
  'sk': 'Slovenƒçina',
  'ro': 'Rom√¢nƒÉ',
  'bg': '–ë—ä–ª–≥–∞—Ä—Å–∫–∏',
  'hr': 'Hrvatski',
  'sr': '–°—Ä–ø—Å–∫–∏',
  'sl': 'Sloven≈°ƒçina',
  'et': 'Eesti',
  'lv': 'Latvie≈°u',
  'lt': 'Lietuvi≈≥',
  'mt': 'Malti',
  'ga': 'Gaeilge',
  'cy': 'Cymraeg',
  'is': '√çslenska',
  'mk': '–ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏',
  'sq': 'Shqip',
  'ka': '·É•·Éê·É†·Éó·É£·Éö·Éò',
  'hy': '’Ä’°’µ’•÷Ä’•’∂',
  'az': 'Az…ôrbaycan',
  'kk': '“ö–∞–∑–∞“õ',
  'ky': '–ö—ã—Ä–≥—ã–∑—á–∞',
  'uz': 'O'zbek',
  'tg': '–¢–æ“∑–∏–∫”£',
  'mn': '–ú–æ–Ω–≥–æ–ª',
  'my': '·Äô·Äº·Äî·Ä∫·Äô·Ä¨',
  'km': '·ûÅ·üí·ûò·üÇ·ûö',
  'lo': '‡∫•‡∫≤‡∫ß',
  'ne': '‡§®‡•á‡§™‡§æ‡§≤‡•Ä',
  'si': '‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω',
  'ur': 'ÿßÿ±ÿØŸà',
  'bn': '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ',
  'gu': '‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä',
  'pa': '‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä',
  'te': '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å',
  'kn': '‡≤ï‡≤®‡≥ç‡≤®‡≤°',
  'ml': '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç',
  'ta': '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç',
  'he': '◊¢◊ë◊®◊ô◊™',
  'yi': '◊ô◊ô◊ì◊ô◊©',
  'am': '·ä†·àõ·à≠·äõ',
  'sw': 'Kiswahili',
  'zu': 'isiZulu',
  'af': 'Afrikaans',
  'xh': 'isiXhosa',
  'st': 'Sesotho',
  'tn': 'Setswana',
  'ss': 'siSwati',
  've': 'Tshivenda',
  'ts': 'Xitsonga',
  'nr': 'Sesotho sa Leboa',
  'lg': 'Luganda',
  'rw': 'Kinyarwanda',
  'ak': 'Akan',
  'yo': 'Yor√πb√°',
  'ig': 'Igbo',
  'ha': 'Hausa',
  'ff': 'Fulfulde',
  'wo': 'Wolof',
  'sn': 'chiShona',
  'ny': 'Chichewa',
  'mg': 'Malagasy',
  'so': 'Soomaali',
  'om': 'Afaan Oromoo',
  'ti': '·âµ·åç·à≠·äõ',
  'aa': 'Afar',
  'auto': 'T·ª± ƒë·ªông'
};

document.addEventListener('DOMContentLoaded', function() {
  const languagesInput = document.getElementById('languages');
  const saveBtn = document.getElementById('saveBtn');
  const statusDiv = document.getElementById('status');
  const previewContent = document.getElementById('previewContent');

  // Load c·∫•u h√¨nh hi·ªán t·∫°i
  chrome.storage.sync.get(['languages'], function(result) {
    if (result.languages) {
      languagesInput.value = result.languages;
      updatePreview();
    }
  });

  // C·∫≠p nh·∫≠t preview khi nh·∫≠p
  languagesInput.addEventListener('input', updatePreview);

  // L∆∞u c·∫•u h√¨nh
  saveBtn.addEventListener('click', function() {
    const languages = languagesInput.value.trim();
    
    if (!languages) {
      showStatus('Vui l√≤ng nh·∫≠p √≠t nh·∫•t m·ªôt ng√¥n ng·ªØ', 'error');
      return;
    }

    const langList = languages.split(',').map(lang => lang.trim()).filter(lang => lang);
    
    if (langList.length > 5) {
      showStatus('T·ªëi ƒëa ch·ªâ ƒë∆∞·ª£c 5 ng√¥n ng·ªØ', 'error');
      return;
    }

    if (langList.length === 0) {
      showStatus('Vui l√≤ng nh·∫≠p √≠t nh·∫•t m·ªôt ng√¥n ng·ªØ', 'error');
      return;
    }

    chrome.storage.sync.set({
      languages: languages
    }, function() {
      showStatus('ƒê√£ l∆∞u c·∫•u h√¨nh th√†nh c√¥ng!', 'success');
      
      // Th√¥ng b√°o cho content script c·∫≠p nh·∫≠t
      chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {
        if (tabs[0]) {
          chrome.tabs.sendMessage(tabs[0].id, {
            action: 'updateLanguages',
            languages: langList
          });
        }
      });
    });
  });

  function updatePreview() {
    const languages = languagesInput.value.trim();
    const langList = languages.split(',').map(lang => lang.trim()).filter(lang => lang);
    
    let previewHTML = '';
    
    if (langList.length === 0) {
      previewHTML = '<div class="preview-item"><span class="preview-emoji">‚ùå</span><span class="preview-lang">Ch∆∞a c√≥ ng√¥n ng·ªØ n√†o</span></div>';
    } else {
      langList.slice(0, 5).forEach(lang => {
        const emoji = languageEmojis[lang] || 'üåê';
        const name = languageNames[lang] || lang;
        previewHTML += `<div class="preview-item">
          <span class="preview-emoji">${emoji}</span>
          <span class="preview-lang">${name} (${lang})</span>
        </div>`;
      });
      
      if (langList.length > 5) {
        previewHTML += '<div class="preview-item"><span class="preview-emoji">‚ö†Ô∏è</span><span class="preview-lang">Ch·ªâ hi·ªÉn th·ªã 5 ng√¥n ng·ªØ ƒë·∫ßu ti√™n</span></div>';
      }
    }
    
    previewContent.innerHTML = previewHTML;
  }

  function showStatus(message, type) {
    statusDiv.textContent = message;
    statusDiv.className = `status ${type}`;
    
    setTimeout(() => {
      statusDiv.className = 'status';
    }, 3000);
  }
}); 